name: PHP Composer

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
#        os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest]
        php: ['7.1', '7.2', '7.3', '7.4', '8.0']
        yaml: ['^5.0', '^4.3', '^3.4']
        exclude:
          # Symfony YAML does not run on PHP 7.1
          - php: '7.1'
            yaml: '^5.0'
        include: 
          - php: '7.4'
            os: windows-latest
            yaml: '^5.0'
          - php: '7.4'
            os: macos-latest
            yaml: '^5.0'
            
            
    runs-on: ${{ matrix.os }}
    env:
      YAML:  ${{ matrix.yaml }}

    steps:
      - uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: date.timezone='UTC'
          coverage: pcov
          tools: composer:v2

      - name: Determine composer cache directory on Linux
        if: matrix.os == 'ubuntu-latest'
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV

      - name: Determine composer cache directory on Windows
        if: matrix.os == 'windows-latest'
        run: echo "COMPOSER_CACHE_DIR=~\AppData\Local\Composer" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Cache dependencies installed with composer
        uses: actions/cache@v2
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php${{ matrix.php }}-os${{ matrix.os }}-yaml${{ matrix.yaml }}-composer-${{ hashFiles('**/composer.json') }}


      - name: Validate composer.json and composer.lock
        run: composer validate --ansi

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: |
          make install
          composer require symfony/yaml:"${YAML}" --prefer-dist --no-interaction --ansi

      - name: Validate test data
        run: make lint

      - name: PHP Stan analysis
        run: make stan

      - name: PHPUnit tests
        run: make test

      - name: Check code style
        run: make check-style

      - name: Code coverage
        run: make coverage
